{% extends "users/steps-bar.html.twig" %}

{% block title %}
    Nueva formación {{ parent() }}
{% endblock %}

{% set curPage = 'date' %}

{% block stylesheets %}
    {{ parent() }}

    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="{{ asset('assets/css/training.css') }}" />
{% endblock %}

{% block body %}
    <div class="text-center main-title mx-auto mx-3">
        <h3 class="text-center mt-4 mb-3">SELECCIONA FECHA Y HORA</h3>
    </div>

    <div class="datepicker d-none justify-content-center mx-auto"></div>

    <div class="col-md-12 col-md-offset-2 d-flex justify-content-center my-5">
        <form method="post" action="{{ path('users_training_date_update') }}">
            <div class="text-center">
                <input type="date" class="training-date mr-3 mb-4" name="date" value="{{ app.session.get('training').blocks is defined and app.session.get('training').datetime is not empty ? app.session.get('training').datetime|date("Y-m-d") }}" required>
                <select type="select" class="training-date" name="time" required>
                    <option value="8:00">8:00</option>
                    <option value="8:15">8:15</option>
                    <option value="8:30">8:30</option>
                    <option value="8:45">8:45</option>
                    <option value="9:00">9:00</option>
                    <option value="9:15">9:15</option>
                    <option value="9:30">9:30</option>
                    <option value="9:45">9:45</option>
                    <option value="10:00">10:00</option>
                    <option value="10:15">10:15</option>
                    <option value="10:30">10:30</option>
                    <option value="10:45">10:45</option>
                    <option value="11:00">11:00</option>
                    <option value="11:15">11:15</option>
                    <option value="11:30">11:30</option>
                    <option value="11:45">11:45</option>
                    <option value="12:00">12:00</option>
                    <option value="12:15">12:15</option>
                    <option value="12:30">12:30</option>
                    <option value="12:45">12:45</option>
                    <option value="13:00">13:00</option>
                    <option value="13:15">13:15</option>
                    <option value="13:30">13:30</option>
                    <option value="13:45">13:45</option>
                    <option value="14:00">14:00</option>
                    <option value="14:15">14:15</option>
                    <option value="14:30">14:30</option>
                    <option value="14:45">14:45</option>
                    <option value="15:00">15:00</option>
                    <option value="15:15">15:15</option>
                    <option value="15:30">15:30</option>
                    <option value="15:45">15:45</option>
                    <option value="16:00">16:00</option>
                    <option value="16:15">16:15</option>
                    <option value="16:30">16:30</option>
                    <option value="16:45">16:45</option>
                    <option value="17:00">17:00</option>
                    <option value="17:15">17:15</option>
                    <option value="17:30">17:30</option>
                    <option value="17:45">17:45</option>
                    <option value="18:00">18:00</option>
                    <option value="18:15">18:15</option>
                    <option value="18:30">18:30</option>
                    <option value="18:45">18:45</option>
                    <option value="19:00">19:00</option>
                </select>
            </div>
            <div class="col-12 d-flex justify-content-center my-5">
                <input class="block-send" type="submit" value="Guardar">
            </div>
        </form>
    </div>

    <div class="col-12 text-center">¿Tienes dudas? <a href="mailto:knaufandbreakfast@knauf.com">Ponte en contacto con nosotros</a> para obtener asistencia en el proceso de gestión de Knauf & Breakfast</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script>
        (function($) {
            'use strict';
            let timeSelected = "{{ app.session.get('training').blocks is defined and app.session.get('training').datetime is not empty ? app.session.get('training').datetime|date("H:i") }}";

            if (timeSelected !== "") {
                $('select[name=time]').val(timeSelected);
            }

            $('.datepicker').datepicker({
                minDate: 0,
                maxDate: "+5M",
                firstDay: 1,
                closeText: 'Cerrar',
                prevText: '< Ant',
                nextText: 'Sig >',
                currentText: 'Hoy',
                monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
                monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
                dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
                dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mié', 'Juv', 'Vie', 'Sáb'],
                dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sá'],
                beforeShowDay: function(date) {
                    var day = date.getDay();
                    let publicHolidays = [285, 305, 340, 342, 358, 365, 6];
                    let dayDiff = ((date.getTime() - (new Date()).getTime()) / 86400000).toFixed(0);

                    return [(day != 0 && day != 6 && day != 1 && dayDiff > 12), ''];
                },
                onSelect: function(dateText, inst) {
                    $("input[name='fecha']").val(dateText);
                }
            });

            $('input[name=date]').change(function () {
                let selectedDate = new Date($(this).val());
                let currentDate = new Date();

                let dayDiff = ((selectedDate.getTime() - currentDate.getTime()) / 86400000).toFixed(0);
                let dayOfYear =  Math.floor((selectedDate - new Date(selectedDate.getFullYear(), 0, 0)) / 1000 / 60 / 60 / 24);
                let selectedDay = selectedDate.getDay();
                let publicHolidays = [285, 305, 340, 342, 358, 359, 365, 1, 6];

                if (dayDiff < 11) {
                    $(this).val("");
                    alert('La fecha se debe fijar con un margen de 10 días naturales posteriores a hoy');
                    return;
                }

                if (selectedDay === 0 || selectedDay === 6 || selectedDay === 1 || publicHolidays.includes(dayOfYear)) {
                    $(this).val("");
                    alert('No se pueden seleccionar lunes, sábado, domingo ni festivos.');
                    return;
                }
            });

            $('input[name=time]').on("change keyup paste", function(){
                let timeSelected = $(this).val();
                let hours = timeSelected.split(":")[0];
                let minutes= timeSelected.split(":")[1];

                if (hours > 12 || hours < 8) {
                    $(this).val("");
                    alert('La hora se debe de fijar entre las 8:00 y las 13:00');
                }
            });
        })(jQuery);
    </script>
{% endblock %}